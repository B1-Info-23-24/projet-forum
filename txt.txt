<!DOCTYPE html>
<html lang="fr">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Motorum - Accueil</title>
	<link rel="stylesheet" href="../static/home.css">
	<style>
		.post {
			border: 1px solid #ccc;
			margin-bottom: 20px;
			padding: 10px;
		}

		.comments {
			margin-top: 10px;
			padding-top: 10px;
			border-top: 1px solid #eee;
		}

		.comment-form {
			margin-top: 10px;
		}

		.comment {
			margin-bottom: 10px;
			padding: 5px;
			border: 1px solid #e0e0e0;
			background-color: #f9f9f9;
		}

		.comment p {
			margin: 5px 0;
		}

		.like-btn {
			margin-top: 10px;
			cursor: pointer;
			color: blue;
		}
	</style>
</head>

<body>
	<div class="container">
		<aside class="sidebar">
			<div class="logo">Motorum</div>
			<div class="sections">
				<div class="section active">Les plus récents</div>
				<div class="section">Populaire du jour</div>
				<div class="section">Abonnement</div>
			</div>
			<div class="tags">
				<h2>Tags populaires</h2>
				<div class="tag">#LeBoncoin</div>
				<div class="tag">#Budget 10K</div>
				<div class="tag">#Budget 5K</div>
				<div class="tag">#Supermot</div>
				<div class="tag">#MotoGP</div>
				<div class="tag">#BMW</div>
			</div>
			<div class="pinned-group">Groupe épinglé</div>
		</aside>
		<main class="content">
			<div class="top-bar">
				<!-- <input type="text" placeholder="Tapez ici pour chercher..."> -->
				<div class="user-info">
					<p class="welcome-message"><span id="username"></span></p>
					<a href="#" id="profile" class="button">Profil</a>
					<button class="profile-button" onclick="location.href='/logout'">Déconnexion</button>
				</div>
			</div>
			<form id="postForm">
				<label for="content">Content:</label>
				<textarea name="content" id="content" required></textarea>
				<br>
				<button type="submit">Créer Post</button>
			</form>
			<div class="posts">
				<form class="comment-form">
					<input type="hidden" name="post_id" value="1">
					<textarea name="comment" placeholder="Ajouter un commentaire..." required></textarea>
					<button type="submit">Ajouter</button>
				</form>
				<!-- Les posts seront chargés ici -->
			</div>
			<form class="comment-form">
				<input type="hidden" name="post_id" value="1">
				<textarea name="comment" placeholder="Ajouter un commentaire..." required></textarea>
				<button type="submit">Ajouter</button>
			</form>

		</main>
		<aside class="sidebar-right">
			<h2>Leboncoin top annonce</h2>
			<div class="ad">Bonjour je vends ma moto, un Z800 abs de 2016 que j'ai bridé car je suis encore...</div>
			<div class="ad">Bonjour je vend mon duke 790 de 2018 en très bon état prête à rouler, révision faite cher...</div>
			<div class="ad">Je vends une Suzuki GSR 750 en excellent état...</div>
			<div class="ad">SPEED TRIPLE 1050 avec ABS Mise en circulation 05/2015</div>
			<div class="ad">Ktm 890 R avec le tech pack. Moto en parfait état, entretien 100% chez KTM. Révision récente.
			</div>
			<div class="ad">Je vend ma KTM 690 SM-C R, pour passer sur un roadster.</div>
		</aside>
	</div>
	<div class="footer-container">
		<footer class="footer">
			<p>© 2024 Motorum. Tous droits réservés.</p>
			<p>
				<a href="#">Politique de confidentialité</a> |
				<a href="#">Conditions d'utilisation</a> |
				<a href="#">Contactez-nous</a>
			</p>
		</footer>
	</div>
	<script>
		let user;
		const urlParams = new URLSearchParams(window.location.search);
		const id = urlParams.get('id');
		if (id != null) {
			let profile = document.getElementById('profile');
			profile.setAttribute('href', `/profile?id=${id}`);
			fetch(`http://localhost:8181/getuserbyid?id=${id}`, {
				method: 'GET',
			})
				.then(response => response.json())
				.then(data => {
					console.log(data);
					user = data;
					let username = document.getElementById('username');
					username.append(user?.name);
				})
				.catch(error => console.error('Erreur:', error));
		}

		function createPost(event) {
			event.preventDefault();

			if (!user) {
				alert('Erreur : utilisateur non trouvé.');
				return;
			}

			const userID = user.id;
			const content = document.querySelector('textarea[name="content"]').value;

			const postData = {
				user_id: userID,  // Utilise l'ID utilisateur récupéré
				content: content
			};

			fetch('http://localhost:8181/post/create', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
				},
				body: JSON.stringify(postData),
			})
				.then(response => {
					if (!response.ok) {
						throw new Error('Erreur lors de la création du post');
					}
					return response.text();
				})
				.then(message => {
					alert(message);
					loadPosts();
				})
				.catch(error => {
					console.error('Erreur:', error);
					alert('Une erreur est survenue lors de la création du post');
				});
		}

		document.getElementById('postForm').addEventListener('submit', createPost);
		function loadPosts() {
			fetch('http://localhost:8181/posts', {
				method: 'GET',
			})
				.then(response => response.json())
				.then(data => {
					const postsContainer = document.querySelector('.posts');
					postsContainer.innerHTML = '';
					data.forEach(post => {
						const postElement = document.createElement('div');
						postElement.classList.add('post');
						postElement.innerHTML = `
          <p>${post.content}</p>
          <span class="post-user">Posté par ${post.user_name}</span>
          <span class="post-likes">Likes: ${post.likes}</span>
          <div class="comments">
            <h3>Commentaires</h3>
            ${post.comments.map(comment => `
              <div class="comment">
                <span class="comment-user">${comment.user_name}:</span>
                <p>${comment.content}</p>
              </div>
            `).join('')}
          </div>
        `;
						postsContainer.appendChild(postElement);
					});
				})
				.catch(error => console.error('Erreur de chargement des posts:', error));
		}

		document.addEventListener('DOMContentLoaded', loadPosts);
	</script>

</body>

</html>









<!DOCTYPE html>
<html lang="fr">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/static/register.css">
    <title>Inscription</title>
</head>

<body>
    <div class="container">
        <div class="header">
            <a href="/login" class="back-button">&larr;</a>
            <h1>Inscription</h1>
        </div>
        <form id="registerForm">
            <div class="form-group">
                <label for="name">Nom:</label>
                <input type="text" id="name" name="name" required autocomplete="name">
            </div>
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required autocomplete="username">
            </div>
            <div class="form-group">
                <label for="password">Mot de passe:</label>
                <input type="password" id="password" name="password" required autocomplete="new-password">
                <small id="passwordHelp" class="form-text">
                    Doit contenir au moins 8 caractères, une majuscule, une minuscule, un chiffre et un caractère
                    spécial.
                </small>
            </div>
            <div class="form-group">
                <label for="confirmPassword">Confirmer le mot de passe:</label>
                <input type="password" id="confirmPassword" name="confirmPassword" required autocomplete="new-password">
            </div>
            <button type="submit" class="button">S'inscrire</button>
            <a href="/login" class="button register-button">Connectez-vous</a>
        </form>
    </div>

</body>
<script>
    function validatePassword(password) {
        const passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
        return passwordPattern.test(password);
    }

    function registerUser(event) {
        event.preventDefault();

        const password = document.getElementById('password').value;
        const confirmPassword = document.getElementById('confirmPassword').value;
       
        if (!validatePassword(password)) {
            alert('Le mot de passe ne respecte pas les critères : au moins 8 caractères, une majuscule, une minuscule, un chiffre et un caractère spécial.');
            return;
        }

        if (password !== confirmPassword) {
            alert('Les mots de passe ne correspondent pas.');
            return;
        }

        const formData = new FormData(document.getElementById('registerForm'));

        fetch('http://localhost:8181/users/create', {
            method: 'POST',
            body: formData
        })
        .then(response => {
            console.log(response);
            if (response.ok) {
                alert('Inscription réussie');
                window.location.href = "/login"; 
            } else {
                response.text().then(text => {
                    alert('Erreur lors de l\'inscription : ' + text);
                });
            }
        })
        .catch(error => console.error('Erreur:', error));
    }

    document.getElementById('registerForm').addEventListener('submit', registerUser);
</script>


</html>

<!-- <script>
    function registerUser(event) {
        event.preventDefault();
        const formData = new FormData(document.getElementById('registerForm'));
        fetch('http://localhost:8181/users/create', {
            method: 'POST',
            body: formData
        })
            .then(response => {
                console.log(response)
                if (response.ok) {
                    alert('Inscription réussie');
                    window.location.href = "/login"; // Redirection vers la page de connexion après inscription réussie
                } else {
                    response.text().then(text => {
                        alert('Erreur lors de l\'inscription : ' + text);
                    });
                }
            })
            .catch(error => console.error('Erreur:', error));
    }

    document.getElementById('registerForm').addEventListener('submit', registerUser);
</script> -->